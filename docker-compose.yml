version: '3'

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - '5432:5432'
    volumes:
      - ./init_db/:/docker-entrypoint-initdb.d/
      - .:/var/lib/postgresql/data/

#  adminer:
#    image: adminer
#    restart: always
#    links:
#      - "db:db"
#    ports:
#      - "8090:8080"
#    depends_on:
#      - db

  vpn:
    image: jordanpotter/wireguard:latest
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      net.ipv4.conf.all.src_valid_mark: 1
    ports:
      - '9001:9001'
    volumes:
      - ./vpnConfig/pl-wg-finevpn.conf:/etc/wireguard/pl-wg-finevpn.conf
#    depends_on:
#      - adminer


  cg:
    image: yutfut/cg:${CG_VERSION}
    network_mode: service:vpn
    restart: always
    volumes:
      - ./config:/app/config
    depends_on:
      - vpn

  ml:
    image: yutfut/ml:${ML_VERSION}
    shm_size: '1gb'
    restart: always
    ports:
      - '9000:9000'
    depends_on:
      - cg

  backend:
    image: yutfut/back:${BACK_VERSION}
    restart: always
    ports:
      - '8000:8000'
    volumes:
      - ./backConfig:/project/backConfig
    depends_on:
      - ml

  nginx:
    image: nginx:latest
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./dist:/var/html
      - ./certs:/etc/ssl
    depends_on:
      - backend

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    depends_on:
      - nginx

  prometheus:
    container_name: prom/prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - '9090:9090'
    depends_on:
      - node-exporter

  grafana:
    image: grafana/grafana-enterprise
    links:
      - "prometheus:prometheus"
    ports:
      - "8090:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=yutfut
      - GF_SECURITY_ADMIN_PASSWORD=yutfut
    depends_on:
      - prometheus